# AutoHotkey syntax highlighting style for SciTE
# Darchon
#

# New SciTE4AutoHotkey style format
s4ahk.style=1

# Default text font
default.text.font=Consolas

# Base (background, base font)
# Style 32 is the default style and its features will be inherited by all other styles unless overridden.
style.*.32=font:$(default.text.font),size:10,fore:#B3B8BC,back:#2F353C

# Additional colors not set by the SciTE4AutoHotkey Style Editor
default.color.back=#2F353C
default.color.fore=#B3B8BC
default.color.keyword=#FCEDE9
default.color.green=#52D273
default.color.crimson=#E94D62
default.color.yellow=#E8C755

# Style 33 is used to display line numbers in the margin.
style.*.33=fore:$(default.color.fore),back:$(default.color.back)

# Matching brace style
# Styles 34 and 35 are used to display matching and non-matching braces respectively.
# From the SciTE docs:
#   Brace highlighting is a feature that shows the range of a brace when the caret is positioned immediately after it.
#   It is especially useful when complex nested braces are used. The characters '(', ')', '[', ']', '{', and '}' are
#   considered braces. The feature defaults to off (because it slows cursor movement) unless braces.check is set to 1.
#   If braces.sloppy is set to 1 then if there is no brace before the caret then the character after the caret is
#   checked. The highlighting is performed by displaying the braces in style number 34 or in style number 35 if there is
#   no matching brace. While this is a full style, to avoid partial display of the braces, it is best to make this style
#   differ from the standard style of braces only in foreground and background colour. Only braces with style set to
#   braces.lexer.style (which defaults to 0) are candidates for brace match highlighting.
braces.check=1
braces.sloppy=1
style.*.34=fore:#FF0000,back:#778188

# Unmatched brace style
style.*.35=fore:#000000,back:$(default.color.crimson)

# Style 36 is used for displaying control characters. This is not a full style as the foreground and background colours
# for control characters are determined by their lexical state rather than this style.
style.*.36=back:#FF00FF

# Indentation guides
# Style 37 is used for displaying indentation guides. Only the fore and back are used.
style.*.37=fore:$(default.color.fore),back:$(default.color.back)
highlight.indentation.guides=1

# Style 38 is used for displaying calltips. Only the font, size, fore and back are used.
# Does the fact that only limited options are availible here mean that this script isn't supposed to control calltip
# styles?
#~ style.*.38=font:$(default.text.font),size:10,fore:$(default.color.fore),back:$(default.color.back)
# To activate calltip style:
#   1) Uncomment the line above.
#   2) Place the following code into your UserLuaScript.lua file.
#   3) Reload SciTE4AutoHotkey.
#
#           -- UserLuaScript.lua
#           -- Set calltip highlight fore color
#           local Events = {
#               OnOpen = function()
#                   -- Blue:0xDFBD2E, Green:0x73D252, Crimson:0x624DE9
#                   scite.SendEditor(SCI_CALLTIPSETFOREHLT, 0x73D252)
#               end
#           }
#           -- RegisterEvents function is defined in ahk.lua
#           RegisterEvents(Events)

# Default style
s4ahk.style.default=

# Line comment (; syntax)
s4ahk.style.comment.line=fore:#52D273

# Block comment (/*...*/ syntax)
s4ahk.style.comment.block=fore:#52D273

# Escaped characters (`x)
s4ahk.style.escape=fore:#E94D62

# Operator
s4ahk.style.operator=fore:#FCEDE9

# String
s4ahk.style.string=fore:#E94D62

# Number
s4ahk.style.number=fore:#87AFED

# Word operator/Reserved keyword
s4ahk.style.wordop=fore:#FCEDE9

# Variable/Identifier
s4ahk.style.var=fore:#87AFED

# (v2) Function / (v1.x) Built-in function
s4ahk.style.func=fore:#2EBDDF

# Directive
s4ahk.style.directive=fore:#E8C755

# Label/Hotkey
s4ahk.style.label=fore:#E8C755

# Flow of control
s4ahk.style.flow=fore:#E8C755

# Built-in variable
s4ahk.style.biv=fore:#87AFED,underlined

# (v2) Built-in function / (v1.x) Command
s4ahk.style.bif=fore:#2EBDDF

# Syntax error
s4ahk.style.error=fore:#FCEDE9,back:#6F0F1E

# Old styles for AutoHotkey v1.x code
s4ahk.style.old.key=fore:#FCEDE9
s4ahk.style.old.user=fore:#FCEDE9

# Caret
caret.fore=$(default.color.green)
caret.width=2

# Caret line
caret.line.back=#FFFFFF14

# Highlight current word
highlight.current.word=1
highlight.current.word.indicator=style:roundbox,colour:#52D273,outlinealpha:140,fillalpha:15

# If set, then the Mark All command in the Find dialog will draw indicators over each string found.
find.mark.indicator=style:roundbox,colour:#E8C755,outlinealpha:200,fillalpha:15

# Selection
selection.fore=#000000
selection.back=#FFFFFF

# Indicates long lines
edge.colour=#535A5E
edge.mode=2
edge.column=120

# Folding
fold.highlight=1
fold.highlight.colour=#E94D62

# Fold margin
fold.margin.width=
fold.margin.colour=#4A5459
fold.margin.highlight.colour=#4A5459

# Font quality
font.quality=3
# 0	Default 
# 1	Non-antialiased
# 2	Antialiased
# 3	LCD Optimized

# TillaGoto Colors
# Tilla needs to be reloaded when settings are changed.
#~ tillagoto.gui.transparency=255
#~ tillagoto.gui.font.size=10
tillagoto.gui.bgcolor=0x000000
tillagoto.gui.controlbgcolor=0x2F353C
tillagoto.gui.controlfgcolor=0xFCEDE9

# Output
output.horizontal.size=120
output.initial.hide=1
style.errorlist.32=font:$(default.text.font),size:10,fore:$(default.color.fore),back:$(default.color.back)
style.errorlist.0=fore:$(default.color.keyword)
style.errorlist.1=fore:$(default.color.yellow)
style.errorlist.2=fore:$(default.color.yellow)
style.errorlist.3=fore:$(default.color.yellow)
style.errorlist.4=fore:$(default.color.fore)

# Fix backgrounds set by lua.properties
style.lua.13=
style.lua.14=
style.lua.15=
style.lua.16=
style.lua.17=
style.lua.18=
style.lua.19=
